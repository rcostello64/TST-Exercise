{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["let app = (function() {\n  let state = {};\n\n  const init = () => {\n    state = getState();\n    popFields(state);\n    events();\n  };\n\n  const events = () => {\n    document.querySelector(\"#submit\").addEventListener(\"click\", collectData);\n\n    document.querySelectorAll(\"input\").forEach(input => {\n      input.addEventListener(\"keyup\", e => {\n        state[e.target.id] = e.target.value;\n        setState(state);\n      });\n    });\n  };\n\n  const collectData = () => {\n    if (validateForm()) {\n      submitData(formatData());\n    }\n  };\n\n  const validateForm = () => {\n    let username = valUserNameField(\"username\");\n    invalidField(username, \"userNameField\");\n\n    let password = validatePwField(\"password\");\n    invalidField(password, \"passwordField\");\n\n    let confirmPassword = validatePwField(\"confirmPassword\");\n    invalidField(confirmPassword, \"confirmPasswordField\");\n\n    let pwMatch = checkPwMatch(\"password\", \"confirmPassword\");\n    invalidPwField(pwMatch, \"pwMatch\");\n\n    return username && password && confirmPassword && pwMatch;\n  };\n\n  const valUserNameField = field => {\n    const pattern = /^([a-zA-Z0-9]){8,12}$/,\n      username = document.querySelector(`#${field}`).value;\n\n    return pattern.test(username);\n  };\n\n  const validatePwField = field => {\n    const pattern = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,12}/,\n      pw = document.querySelector(`#${field}`).value;\n    return pattern.test(pw);\n  };\n\n  const checkPwMatch = (field1, field2) => {\n    const pw1 = document.querySelector(`#${field1}`).value;\n    const pw2 = document.querySelector(`#${field2}`).value;\n\n    return pw1 === pw2;\n  };\n\n  const invalidField = (isValid, id) => {\n    let invalid = document.querySelector(`#${id} .invalid`);\n    let valid = document.querySelector(`#${id} .valid`);\n\n    if (isValid) {\n      valid.style.display = \"inline\";\n      invalid.style.display = \"none\";\n    } else {\n      valid.style.display = \"none\";\n      invalid.style.display = \"inline\";\n    }\n  };\n\n  const invalidPwField = (isValid, elem) => {\n    let pwMatch = document.querySelector(`.${elem}`);\n\n    if (isValid) {\n      pwMatch.style.display = \"none\";\n    } else {\n      pwMatch.style.display = \"block\";\n    }\n  };\n\n  const formatData = () => {\n    return {\n      username: document.querySelector(\"#username\").value,\n      password: document.querySelector(\"#password\").value\n    };\n  };\n\n  const submitData = data => {\n    console.log(JSON.stringify(data));\n  };\n\n  const setState = state => {\n    localStorage.setItem(\"formData\", JSON.stringify(state));\n  };\n\n  const getState = () => {\n    let saved = localStorage.getItem(\"formData\");\n    return saved ? JSON.parse(saved) : {};\n  };\n\n  const popFields = state => {\n    for (const key in state) {\n      if (state.hasOwnProperty(key)) {\n        document.querySelector(`#${key}`).value = state[key];\n      }\n    }\n  };\n\n  return { init: init };\n})();\n"]}